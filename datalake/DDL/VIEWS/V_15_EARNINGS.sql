CREATE OR REPLACE VIEW `V_EARNINGS` AS
(
	SELECT
		TR_YEAR,
		TR_MONTH,
		EARN/DAYS_M EARN_1M,
		(
			LEAD(EARN,1,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC) 
			+ LEAD(EARN,2,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,3,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
		)
		/
		(
			LEAD(DAYS_M,1,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,2,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,3,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
		)
		EARN_3M,
		(
			LEAD(EARN,1,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC) 
			+ LEAD(EARN,2,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,3,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,4,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,5,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,6,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
		)
		/
		(
			LEAD(DAYS_M,1,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,2,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,3,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,4,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,5,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,6,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
		) 
		EARN_6M,
		(
			LEAD(EARN,1,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC) 
			+ LEAD(EARN,2,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,3,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,4,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,5,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,6,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,7,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,8,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,9,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
		)
		/
		(
			LEAD(DAYS_M,1,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,2,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,3,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,4,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,5,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,6,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,7,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,8,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,9,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
		) 
		EARN_9M,
			(
			LEAD(EARN,1,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC) 
			+ LEAD(EARN,2,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,3,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,4,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,5,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,6,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,7,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,8,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,9,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,10,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,11,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(EARN,12,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
		)
		/
		(
			LEAD(DAYS_M,1,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,2,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,3,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,4,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,5,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,6,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,7,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,8,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,9,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,10,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,11,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
			+ LEAD(DAYS_M,12,0) OVER (PARTITION BY TRUE ORDER BY TR_YEAR DESC, TR_MONTH DESC)
		) 
		EARN_12M,
		SUM(EARN) OVER (PARTITION BY TR_YEAR,TR_QUARTER ORDER BY TR_MONTH) EARN_QUARTER
	FROM
	(
		SELECT
			TR_YEAR,
			TR_MONTH,
			TR_QUARTER,
			SUM(EARNINGS) EARN,
			DAYS_M
		FROM
		(
			SELECT
				DT,
				t.TR_YEAR,
				t.TR_MONTH,
				EXTRACT(QUARTER FROM DT) TR_QUARTER,
				rev.TR_YEARMONTH,
				COALESCE(rev.REV_1M,0)+SUM(CASE WHEN t.TR_TYPE = 'expense' THEN t.TR_VALUE ELSE 0 END) EARNINGS,
				DATEDIFF(LEAST(CURRENT_DATE(),DATE(LAST_DAY(CONCAT(t.TR_YEAR,'-',t.TR_MONTH,'-01')))),CONCAT(t.TR_YEAR,'-',t.TR_MONTH,'-01'))+1 DAYS_M
			FROM CALENDAR cal
			LEFT JOIN REVENUES rev
			ON cal.YEARMONTH=rev.TR_YEARMONTH
			LEFT JOIN TRANSACTIONS t
			ON cal.DT=t.TR_DATE
			GROUP BY DT
		) t
		GROUP BY TR_YEAR,TR_MONTH
	) t
	-- ORDER BY TR_YEAR DESC, TR_MONTH DESC
);